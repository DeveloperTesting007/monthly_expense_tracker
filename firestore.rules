rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Common functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Categories collection - Allow read for all authenticated users, write for admins
    match /categories/{categoryId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated() && 
        (request.auth.uid == "ADMIN_UID" || request.auth.token.admin == true);
    }

    // Existing transactions rules
    match /transactions/{transactionId} {
      allow read: if isAuthenticated() && isOwner(resource.data.userId);
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      allow update, delete: if isAuthenticated() && isOwner(resource.data.userId);
    }

    // User rules
    match /users/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }

    // Add rules for todos collection
    match /todos/{todoId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}

